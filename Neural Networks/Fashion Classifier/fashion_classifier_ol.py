import tensorflow as tf; import numpy as np; import matplotlib.pyplot as plt; keras = tf.keras; fashion_mnist = keras.datasets.fashion_mnist; (train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data(); train_images = train_images / 255; test_images = test_images / 255; class_names = ["T-shirt/top", "Trouser", "Pullover", "Dress", "Coat", "Sandal", "Shirt", "Sneaker", "Bag", "Ankle boot"]; model = keras.Sequential([keras.layers.Flatten(input_shape=(28,28)),keras.layers.Dense(128, activation="relu"),keras.layers.Dense(10, activation="softmax")]); model.compile(optimizer="adam", loss="sparse_categorical_crossentropy", metrics=["accuracy"]); print("Loading weights:"); model.load_weights('C:\\Users\\swguo\\VSCode Projects\\Machine Learning\\Neural Networks\\Fashion Classifier\\fashion_classifier_weights'); test_loss, test_acc = model.evaluate(test_images, test_labels, verbose=1); print("Test Accuracy: ", test_acc); test_predictions = model.predict(test_images); index = 234; plt.figure(); plt.imshow(test_images[index], cmap="Greys"); plt.tick_params(left = False, labelleft = False, bottom = False, labelbottom = False); expected_label = class_names[np.argmax(test_predictions[index])]; predicted_label = class_names[test_labels[index]]; plt.title(f"Expected: {expected_label}\nPredicted: {predicted_label}"); plt.show()